type FlashLoan @entity(immutable: true) {
  id: Bytes!
  _target: Bytes! # address
  _reserve: Bytes! # address
  _amount: BigInt! # int256
  _totalFee: BigInt! # uint256
  _protocolFee: BigInt! # uint256
  _timestamp: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type NewDefaultInterestRateAddress @entity(immutable: true) {
  id: Bytes!
  _address: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type NewDefaultMarketConfig @entity(immutable: true) {
  id: Bytes!
  _ltv: Int! # uint8
  _lb: Int! # uint8
  _rf: Int! # uint8
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type NewGovernorAddress @entity(immutable: true) {
  id: Bytes!
  _address: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type NewOracleAddress @entity(immutable: true) {
  id: Bytes!
  _address: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type NewPositionAddress @entity(immutable: true) {
  id: Bytes!
  _address: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Token @entity {
  # token address
  id: Bytes!
  # token symbol
  symbol: String!
  # token decimals
  decimals: BigInt!
  # transactions across all pools that include this token
  txCount: BigInt!
  # number of pools containing this token
  poolCount: BigInt!
  # liquidity across all pools in token units
  totalPoolsLiquidity: BigDecimal!
  # liquidity across all pools in derived USD
  totalPoolsLiquidityUSD: BigDecimal!
}

type PoolCreated @entity(immutable: true) {
  id: Bytes!
  token0: Token!
  token1: Token!
  pool: Bytes! # address
  param3: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Lend @entity(immutable: true) {
  id: Bytes!
  amount: BigDecimal!
  tokenAmount: BigDecimal!
  sender: Bytes!
  pool: Bytes!
  positionId: BigInt!
  token: Bytes!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  blockNumber: BigInt!
}

type AssetOracle @entity(immutable: true) {
  id: Bytes!
  tokenPrice: BigDecimal!
  asset: Bytes!
}
